from django.shortcuts import render
from django.http import HttpResponseRedirect

from .models import *
from .forms import LoginForm, EditForm
from django.contrib.auth import authenticate, login, logout

#WizardForm
from formtools.wizard.views import SessionWizardView
import logging


# Create your views here.

def index(request):
    rendicion = Rendicion.objects.all()
    auth = request.user.is_authenticated()
#    for j in context:
    print auth
    return render(request, 'index.html', {'context': rendicion, 'auth':auth})


def profile(request, username):
    user = User.objects.get(username=username)
    print user.id
    rendicion = Rendicion.objects.filter(user=user)
    return render(request, 'profile.html', {'username': username, 'rendicion': rendicion})

def detail(request):
    return render(request, 'index.html')

def edit(request, rid):
    print 'Edit.html'
    print rid
    rall = Rendicion.objects.all()
    rid = Rendicion.objects.get(pk=rid)
#    form1 = EditForm()
    return render(request, 'edit.html', {'rid': rid, 'rall':rall,})


def new(request):
    print 'New.html'
    return render(request, 'new.html')



def login_view(request):
#    print 'login_view'
    if request.method == 'POST':
#        print 'if post'
        form = LoginForm(request.POST)
        if form.is_valid():
            u = form.cleaned_data
            p = form.cleaned_data
#            print u['username']
            user = authenticate(username = u['username'], password = p['password'])
            print user
            if user is not None:
                if user.is_active:
                    login(request, user)
                    return HttpResponseRedirect('/')
                else:
                    print("Esta cuenta esta deshabilitada") #consola por ahora
            else:
                print("El usuario o/y contrasena estan incorrectas")
                return HttpResponseRedirect('/')
    else:
#        print 'else...'
        form = LoginForm()
        return render(request, 'login.html', {'form':form})

def logout_view(request):
    logout(request)
    return HttpResponseRedirect('/')


def post_rendicion(request):
    form = request.POST
    if form.is_valid():
        


    return HttpResponseRedirect('/') 
#    return HttpResponseRedirect('rendicion/1')
    



###wizard form

#TRANSFER_FORMS = [
#    ('step1', Form1),
#    ('step2', Form2),
#]
#TRANSFER_TEMPLATES = {
#    'step1': 'template/new1.html',
#    'step2': 'template/new2.html',
#}

#class MyFormWizard(SessionWizardView):
    #code

#my_form_wizard_view = MyFormWizard.as_view(TRANSFER_FORMS)



####
#class InsertWizard(SessionWizardView):
#
#    def get_form_initial(self, step):
#    #steps are named 'step1','step2','step3'
#    #get the data for step1
#
#    prev_data = self.storage.get_step_data('step1')
#    some_var = prev_data.get('step1-some_var','')
#
#    template_name = 'new.html'
#    form_list = [New1, New2, New3]    
#    model = MyModel
#
#    def done(self, form_list, **kwargs):
#        form_data = process_form_data(form_list)
#        return render_to_response('done.html', {'form_data': form_data})
#
#def process_form_data(form_list):
#    form_data = [form.cleaned_data for form in form_list]
#    logr.debug(form_data[0]['subject'])
#    logr.debug(form_data[1]['sender'])
#    logr.debug(form_data[2]['message'])
#    return form_data
